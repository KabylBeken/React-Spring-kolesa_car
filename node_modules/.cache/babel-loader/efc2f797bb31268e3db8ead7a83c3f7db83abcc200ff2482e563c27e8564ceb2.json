{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Downloads\\\\React\\\\src\\\\components\\\\MovieForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { NotificationManager } from 'react-notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieForm = _ref => {\n  _s();\n  let {\n    category,\n    categoryName\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const navigate = useNavigate();\n\n  // Add\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const newMovie = {\n        title,\n        description,\n        categoryId: category.id\n      };\n      await axios.post('http://localhost:4000/movies', newMovie);\n      setTitle('');\n      setDescription('');\n      navigate(`/movies/${categoryName}`);\n      NotificationManager.success('Фильм успешно добавлен');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieForm, \"WoC0mY9LnCoooHGUZvcGlrtT65o=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieForm;\nexport default MovieForm;\nvar _c;\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","NotificationManager","jsxDEV","_jsxDEV","MovieForm","_ref","_s","category","categoryName","title","setTitle","description","setDescription","navigate","handleSubmit","e","preventDefault","newMovie","categoryId","id","post","success","error","console","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/aser/Downloads/React/src/components/MovieForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nconst MovieForm = ({ category, categoryName }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Add\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newMovie = {\r\n        title,\r\n        description,\r\n        categoryId: category.id,\r\n      };\r\n      await axios.post('http://localhost:4000/movies', newMovie);\r\n      setTitle('');\r\n      setDescription('');\r\n      navigate(`/movies/${categoryName}`);\r\n      NotificationManager.success('Фильм успешно добавлен');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"description\">Description</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}