{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Downloads\\\\React\\\\src\\\\ColorInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageDisplay from './ImageDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorInput = () => {\n  _s();\n  const [hexColor, setHexColor] = useState('');\n  const [imageData, setImageData] = useState(null);\n  const fetchImage = async hexColor => {\n    const response = await fetch(`https://php-noise.com/noise.php?hex=${hexColor}&json`);\n    const data = await response.json();\n    setImageData(data.noise);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const hexRegex = /^[0-9a-fA-F]{6}$/;\n    if (hexRegex.test(hexColor)) {\n      const encodedHexColor = hexColor === 'FFFFFF' ? 'БЕЛЫЙ' : hexColor;\n      fetchImage(encodedHexColor);\n    } else {\n      alert('Пожалуйста, введите шестнадцатеричное значение цвета длиной 6 символов.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0448\\u0435\\u0441\\u0442\\u043D\\u0430\\u0434\\u0446\\u0430\\u0442\\u0435\\u0440\\u0438\\u0447\\u043D\\u043E\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0446\\u0432\\u0435\\u0442\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: hexColor,\n        onChange: e => setHexColor(e.target.value.replace(/[^0-9a-fA-F]/g, '')),\n        pattern: \"[0-9a-fA-F]{6}\",\n        title: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0448\\u0435\\u0441\\u0442\\u043D\\u0430\\u0434\\u0446\\u0430\\u0442\\u0435\\u0440\\u0438\\u0447\\u043D\\u043E\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0446\\u0432\\u0435\\u0442\\u0430 (6 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432)\",\n        maxLength: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      imageData: imageData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorInput, \"SIgO8WcL+rkdZZrLDxCfrRbYPYY=\");\n_c = ColorInput;\nexport default ColorInput;\nvar _c;\n$RefreshReg$(_c, \"ColorInput\");","map":{"version":3,"names":["React","useState","ImageDisplay","jsxDEV","_jsxDEV","ColorInput","_s","hexColor","setHexColor","imageData","setImageData","fetchImage","response","fetch","data","json","noise","handleSubmit","e","preventDefault","hexRegex","test","encodedHexColor","alert","onSubmit","children","type","value","onChange","target","replace","pattern","title","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aser/Downloads/React/src/ColorInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ImageDisplay from './ImageDisplay';\r\n\r\nconst ColorInput = () => {\r\n  const [hexColor, setHexColor] = useState('');\r\n  const [imageData, setImageData] = useState(null);\r\n\r\n  const fetchImage = async (hexColor) => {\r\n    const response = await fetch(`https://php-noise.com/noise.php?hex=${hexColor}&json`);\r\n    const data = await response.json();\r\n    setImageData(data.noise);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const hexRegex = /^[0-9a-fA-F]{6}$/;\r\n    if (hexRegex.test(hexColor)) {\r\n      const encodedHexColor = hexColor === 'FFFFFF' ? 'БЕЛЫЙ' : hexColor;\r\n      fetchImage(encodedHexColor);\r\n    } else {\r\n      alert('Пожалуйста, введите шестнадцатеричное значение цвета длиной 6 символов.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Введите шестнадцатеричное значение цвета:\r\n        <input\r\n          type=\"text\"\r\n          value={hexColor}\r\n          onChange={(e) => setHexColor(e.target.value.replace(/[^0-9a-fA-F]/g, ''))}\r\n          pattern=\"[0-9a-fA-F]{6}\"\r\n          title=\"Введите шестнадцатеричное значение цвета (6 символов)\"\r\n          maxLength={6}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Получить изображение</button>\r\n      <ImageDisplay imageData={imageData} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ColorInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMU,UAAU,GAAG,MAAOJ,QAAQ,IAAK;IACrC,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsCN,QAAS,OAAM,CAAC;IACpF,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCL,YAAY,CAACI,IAAI,CAACE,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,kBAAkB;IACnC,IAAIA,QAAQ,CAACC,IAAI,CAACd,QAAQ,CAAC,EAAE;MAC3B,MAAMe,eAAe,GAAGf,QAAQ,KAAK,QAAQ,GAAG,OAAO,GAAGA,QAAQ;MAClEI,UAAU,CAACW,eAAe,CAAC;IAC7B,CAAC,MAAM;MACLC,KAAK,CAAC,yEAAyE,CAAC;IAClF;EACF,CAAC;EAED,oBACEnB,OAAA;IAAMoB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BrB,OAAA;MAAAqB,QAAA,GAAO,oOAEL,eAAArB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,QAAS;QAChBqB,QAAQ,EAAGV,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACW,MAAM,CAACF,KAAK,CAACG,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAE;QAC1EC,OAAO,EAAC,gBAAgB;QACxBC,KAAK,EAAC,wRAAuD;QAC7DC,SAAS,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACRjC,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACnDjC,OAAA,CAACF,YAAY;MAACO,SAAS,EAAEA;IAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjC;AAEX,CAAC;AAAC/B,EAAA,CAtCID,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}