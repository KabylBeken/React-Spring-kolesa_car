{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Downloads\\\\React\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PoemSelector() {\n  _s();\n  // Первый список названий стихотворений\n  const poems = ['Стих 1', 'Стих 2', 'Стих 3'];\n\n  // Второй список, который будет храниться в state и изначально пустой\n  const [selectedPoems, setSelectedPoems] = useState([]);\n\n  // Функция для добавления стиха во второй список\n  const addPoem = poem => {\n    setSelectedPoems(prevSelectedPoems => {\n      // Проверяем, есть ли уже стих в списке, чтобы избежать дублирования\n      if (!prevSelectedPoems.includes(poem)) {\n        return [...prevSelectedPoems, poem];\n      }\n      return prevSelectedPoems;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u0421\\u0442\\u0438\\u0445\\u043E\\u0442\\u0432\\u043E\\u0440\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: poems.map((poem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => addPoem(poem),\n        children: poem\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0421\\u0442\\u0438\\u0445\\u043E\\u0442\\u0432\\u043E\\u0440\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedPoems.map((poem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: poem\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(PoemSelector, \"nL8y9ulChjczvVkzcYB/IugJgtk=\");\n_c = PoemSelector;\nexport default PoemSelector;\nvar _c;\n$RefreshReg$(_c, \"PoemSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PoemSelector","_s","poems","selectedPoems","setSelectedPoems","addPoem","poem","prevSelectedPoems","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aser/Downloads/React/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction PoemSelector() {\r\n  // Первый список названий стихотворений\r\n  const poems = ['Стих 1', 'Стих 2', 'Стих 3'];\r\n\r\n  // Второй список, который будет храниться в state и изначально пустой\r\n  const [selectedPoems, setSelectedPoems] = useState([]);\r\n\r\n  // Функция для добавления стиха во второй список\r\n  const addPoem = (poem) => {\r\n    setSelectedPoems((prevSelectedPoems) => {\r\n      // Проверяем, есть ли уже стих в списке, чтобы избежать дублирования\r\n      if (!prevSelectedPoems.includes(poem)) {\r\n        return [...prevSelectedPoems, poem];\r\n      }\r\n      return prevSelectedPoems;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Доступные Стихотворения</h2>\r\n      <ul>\r\n        {poems.map((poem, index) => (\r\n          <li key={index} onClick={() => addPoem(poem)}>\r\n            {poem}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>Выбранные Стихотворения</h2>\r\n      <ul>\r\n        {selectedPoems.map((poem, index) => (\r\n          <li key={index}>{poem}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PoemSelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAMC,KAAK,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;;EAE5C;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMQ,OAAO,GAAIC,IAAI,IAAK;IACxBF,gBAAgB,CAAEG,iBAAiB,IAAK;MACtC;MACA,IAAI,CAACA,iBAAiB,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAE;QACrC,OAAO,CAAC,GAAGC,iBAAiB,EAAED,IAAI,CAAC;MACrC;MACA,OAAOC,iBAAiB;IAC1B,CAAC,CAAC;EACJ,CAAC;EAED,oBACER,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChCd,OAAA;MAAAU,QAAA,EACGP,KAAK,CAACY,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBACrBhB,OAAA;QAAgBiB,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACC,IAAI,CAAE;QAAAG,QAAA,EAC1CH;MAAI,GADES,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACLd,OAAA;MAAAU,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChCd,OAAA;MAAAU,QAAA,EACGN,aAAa,CAACW,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,kBAC7BhB,OAAA;QAAAU,QAAA,EAAiBH;MAAI,GAAZS,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAACZ,EAAA,CApCQD,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAsCrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}