{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Downloads\\\\React\\\\src\\\\components\\\\CategoryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCategory = async () => {\n      /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this);\n      if (id) {\n        try {\n          const response = await axios.get(`http://localhost:4000/categories/${id}`);\n          setName(response.data.name);\n        } catch (error) {\n          console.error(error);\n          NotificationManager.error('Error fetching category');\n        }\n      }\n    };\n    fetchCategory();\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (id) {\n      // Update category\n      try {\n        await axios.put(`http://localhost:4000/categories/${id}`, {\n          name\n        });\n        NotificationManager.success('Category updated successfully');\n        navigate('/categories');\n      } catch (error) {\n        console.error(error);\n        NotificationManager.error('Error updating category');\n      }\n    } else {\n      // Create category\n      try {\n        await axios.post('http://localhost:4000/categories', {\n          name\n        });\n        NotificationManager.success('Category created successfully');\n        navigate('/categories');\n      } catch (error) {\n        console.error(error);\n        NotificationManager.error('Error creating category');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryForm, \"/V7GrFOP+DDRnoz+f5sNQRgb5rQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CategoryForm;\nexport default CategoryForm;\nvar _c;\n$RefreshReg$(_c, \"CategoryForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useParams","NotificationContainer","NotificationManager","jsxDEV","_jsxDEV","CategoryForm","_s","name","setName","id","navigate","fetchCategory","fileName","_jsxFileName","lineNumber","columnNumber","response","get","data","error","console","handleSubmit","e","preventDefault","put","success","post","onSubmit","children","className","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/aser/Downloads/React/src/components/CategoryForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { NotificationContainer,NotificationManager } from 'react-notifications';\r\n\r\nconst CategoryForm = () => {\r\n  const [name, setName] = useState('');\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCategory = async () => {\r\n      <NotificationContainer/>\r\n      if (id) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:4000/categories/${id}`);\r\n          setName(response.data.name);\r\n        } catch (error) {\r\n          console.error(error);\r\n          NotificationManager.error('Error fetching category');\r\n        }\r\n      }\r\n      \r\n    };\r\n\r\n    fetchCategory();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (id) {\r\n      // Update category\r\n      try {\r\n        await axios.put(`http://localhost:4000/categories/${id}`, { name });\r\n        NotificationManager.success('Category updated successfully');\r\n        navigate('/categories');\r\n      } catch (error) {\r\n        console.error(error);\r\n        NotificationManager.error('Error updating category');\r\n      }\r\n    } else {\r\n      // Create category\r\n      try {\r\n        await axios.post('http://localhost:4000/categories', { name });\r\n        NotificationManager.success('Category created successfully');\r\n        navigate('/categories');\r\n      } catch (error) {\r\n        console.error(error);\r\n        NotificationManager.error('Error creating category');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input type=\"text\" className=\"form-control\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}