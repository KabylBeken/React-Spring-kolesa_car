{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Downloads\\\\React\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputColor = _ref => {\n  _s();\n  let {\n    onSubmit\n  } = _ref;\n  const [hexColor, setHexColor] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(hexColor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0448\\u0435\\u0441\\u0442\\u043D\\u0430\\u0434\\u0446\\u0430\\u0442\\u0435\\u0440\\u0438\\u0447\\u043D\\u043E\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0446\\u0432\\u0435\\u0442\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: hexColor,\n        onChange: e => setHexColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(InputColor, \"i6eNYCy7Z5WjCr5/AhjXe4gGQaI=\");\n_c = InputColor;\nconst ImageDisplay = _ref2 => {\n  let {\n    imageData\n  } = _ref2;\n  if (!imageData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0448\\u0435\\u0441\\u0442\\u043D\\u0430\\u0434\\u0446\\u0430\\u0442\\u0435\\u0440\\u0438\\u0447\\u043D\\u043E\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0446\\u0432\\u0435\\u0442\\u0430.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: `data:image/png;base64,${imageData}`,\n    alt: \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_c2 = ImageDisplay;\nconst App = () => {\n  _s2();\n  const [imageData, setImageData] = useState(null);\n  const fetchImage = async hexColor => {\n    const response = await fetch(`https://php-noise.com/noise.php?hex=${hexColor}&json`);\n    const data = await response.json();\n    setImageData(data.noise);\n  };\n  const handleSubmit = hexColor => {\n    fetchImage(hexColor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputColor, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      imageData: imageData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"hDgMuzgmsuPn1VStArzfeUdE3Oc=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InputColor\");\n$RefreshReg$(_c2, \"ImageDisplay\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputColor","_ref","_s","onSubmit","hexColor","setHexColor","handleSubmit","e","preventDefault","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","ImageDisplay","_ref2","imageData","src","alt","_c2","App","_s2","setImageData","fetchImage","response","fetch","data","json","noise","_c3","$RefreshReg$"],"sources":["C:/Users/aser/Downloads/React/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst InputColor = ({ onSubmit }) => {\r\n  const [hexColor, setHexColor] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(hexColor);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Введите шестнадцатеричное значение цвета:\r\n        <input\r\n          type=\"text\"\r\n          value={hexColor}\r\n          onChange={(e) => setHexColor(e.target.value)}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Получить изображение</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ImageDisplay = ({ imageData }) => {\r\n  if (!imageData) {\r\n    return <div>Пожалуйста, введите шестнадцатеричное значение цвета.</div>;\r\n  }\r\n\r\n  return <img src={`data:image/png;base64,${imageData}`} alt=\"Изображение\" />;\r\n};\r\n\r\nconst App = () => {\r\n  const [imageData, setImageData] = useState(null);\r\n\r\n  const fetchImage = async (hexColor) => {\r\n    const response = await fetch(`https://php-noise.com/noise.php?hex=${hexColor}&json`);\r\n    const data = await response.json();\r\n    setImageData(data.noise);\r\n  };\r\n\r\n  const handleSubmit = (hexColor) => {\r\n    fetchImage(hexColor);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <InputColor onSubmit={handleSubmit} />\r\n      <ImageDisplay imageData={imageData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}