{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Downloads\\\\React\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/style.css';\n\n// Components\nimport Categories from './Categories';\nimport Goods from './Goods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for storing categories and goods\n  const [categories, setCategories] = React.useState([]);\n  const [goods, setGoods] = React.useState([]);\n\n  // Fetch all categories and goods on component mount\n  React.useEffect(() => {\n    axios.get('http://localhost:4000/categories').then(res => setCategories(res.data));\n    axios.get('http://localhost:4000/goods').then(res => setGoods(res.data));\n  }, []);\n\n  // Functions for CRUD operations\n  // Function to add a new category\n  const addCategory = category => {\n    axios.post('http://localhost:4000/categories', category).then(res => {\n      setCategories([...categories, res.data]);\n      NotificationManager.success('Category added successfully');\n    }).catch(err => {\n      NotificationManager.error('Error adding category', err.message);\n    });\n  };\n\n  // Function to add a new good\n  const addGood = good => {\n    axios.post('http://localhost:4000/goods', good).then(res => {\n      setGoods([...goods, res.data]);\n      NotificationManager.success('Good added successfully');\n    }).catch(err => {\n      NotificationManager.error('Error adding good', err.message);\n    });\n  };\n\n  // Function to update a category\n  const updateCategory = category => {\n    axios.put(`http://localhost:4000/categories/${category.id}`, category).then(res => {\n      setCategories(categories.map(cat => cat.id === category.id ? category : cat));\n      NotificationManager.success('Category updated successfully');\n    }).catch(err => {\n      NotificationManager.error('Error updating category', err.message);\n    });\n  };\n\n  // Function to update a good\n  const updateGood = good => {\n    axios.put(`http://localhost:4000/goods/${good.id}`, good).then(res => {\n      setGoods(goods.map(g => g.id === good.id ? good : g));\n      NotificationManager.success('Good updated successfully');\n    }).catch(err => {\n      NotificationManager.error('Error updating good', err.message);\n    });\n  };\n\n  // Function to delete a category\n  const deleteCategory = id => {\n    axios.delete(`http://localhost:4000/categories/${id}`).then(res => {\n      setCategories(categories.filter(cat => cat.id !== id));\n      NotificationManager.success('Category deleted successfully');\n    }).catch(err => {\n      NotificationManager.error('Error deleting category', err.message);\n    });\n  };\n\n  // Function to delete a good\n  const deleteGood = id => {\n    axios.delete(`http://localhost:4000/goods/${id}`).then(res => {\n      setGoods(goods.filter(g => g.id !== id));\n      NotificationManager.success('Good deleted successfully');\n    }).catch(err => {\n      NotificationManager.error('Error deleting good', err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/categories\",\n        element: /*#__PURE__*/_jsxDEV(Categories, {\n          categories: categories,\n          addCategory: addCategory,\n          updateCategory: updateCategory,\n          deleteCategory: deleteCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/goods\",\n        element: /*#__PURE__*/_jsxDEV(Goods, {\n          goods: goods,\n          categories: categories,\n          addGood: addGood,\n          updateGood: updateGood,\n          deleteGood: deleteGood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J3cIzHQ0CIHvQQzcWng09uEAEhs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","axios","NotificationContainer","NotificationManager","Categories","Goods","jsxDEV","_jsxDEV","App","_s","categories","setCategories","useState","goods","setGoods","useEffect","get","then","res","data","addCategory","category","post","success","catch","err","error","message","addGood","good","updateCategory","put","id","map","cat","updateGood","g","deleteCategory","delete","filter","deleteGood","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aser/Downloads/React/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/style.css';\r\n\r\n// Components\r\nimport Categories from './Categories';\r\nimport Goods from './Goods';\r\n\r\nfunction App() {\r\n  // State for storing categories and goods\r\n  const [categories, setCategories] = React.useState([]);\r\n  const [goods, setGoods] = React.useState([]);\r\n\r\n  // Fetch all categories and goods on component mount\r\n  React.useEffect(() => {\r\n    axios.get('http://localhost:4000/categories')\r\n      .then(res => setCategories(res.data));\r\n    axios.get('http://localhost:4000/goods')\r\n      .then(res => setGoods(res.data));\r\n  }, []);\r\n\r\n  // Functions for CRUD operations\r\n// Function to add a new category\r\nconst addCategory = (category) => {\r\n  axios.post('http://localhost:4000/categories', category)\r\n    .then(res => {\r\n      setCategories([...categories, res.data]);\r\n      NotificationManager.success('Category added successfully');\r\n    })\r\n    .catch(err => {\r\n      NotificationManager.error('Error adding category', err.message);\r\n    });\r\n};\r\n\r\n// Function to add a new good\r\nconst addGood = (good) => {\r\n  axios.post('http://localhost:4000/goods', good)\r\n    .then(res => {\r\n      setGoods([...goods, res.data]);\r\n      NotificationManager.success('Good added successfully');\r\n    })\r\n    .catch(err => {\r\n      NotificationManager.error('Error adding good', err.message);\r\n    });\r\n};\r\n\r\n// Function to update a category\r\nconst updateCategory = (category) => {\r\n  axios.put(`http://localhost:4000/categories/${category.id}`, category)\r\n    .then(res => {\r\n      setCategories(categories.map(cat => cat.id === category.id ? category : cat));\r\n      NotificationManager.success('Category updated successfully');\r\n    })\r\n    .catch(err => {\r\n      NotificationManager.error('Error updating category', err.message);\r\n    });\r\n};\r\n\r\n// Function to update a good\r\nconst updateGood = (good) => {\r\n  axios.put(`http://localhost:4000/goods/${good.id}`, good)\r\n    .then(res => {\r\n      setGoods(goods.map(g => g.id === good.id ? good : g));\r\n      NotificationManager.success('Good updated successfully');\r\n    })\r\n    .catch(err => {\r\n      NotificationManager.error('Error updating good', err.message);\r\n    });\r\n};\r\n\r\n// Function to delete a category\r\nconst deleteCategory = (id) => {\r\n  axios.delete(`http://localhost:4000/categories/${id}`)\r\n    .then(res => {\r\n      setCategories(categories.filter(cat => cat.id !== id));\r\n      NotificationManager.success('Category deleted successfully');\r\n    })\r\n    .catch(err => {\r\n      NotificationManager.error('Error deleting category', err.message);\r\n    });\r\n};\r\n\r\n// Function to delete a good\r\nconst deleteGood = (id) => {\r\n  axios.delete(`http://localhost:4000/goods/${id}`)\r\n    .then(res => {\r\n      setGoods(goods.filter(g => g.id !== id));\r\n      NotificationManager.success('Good deleted successfully');\r\n    })\r\n    .catch(err => {\r\n      NotificationManager.error('Error deleting good', err.message);\r\n    });\r\n};\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/categories\" element={<Categories categories={categories} addCategory={addCategory} updateCategory={updateCategory} deleteCategory={deleteCategory} />} />\r\n        <Route path=\"/goods\" element={<Goods goods={goods} categories={categories} addGood={addGood} updateGood={updateGood} deleteGood={deleteGood} />} />\r\n      </Routes>\r\n      <NotificationContainer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}