{"ast":null,"code":"import axios from \"axios\";\nconst authHeader = () => {\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n  return user && user.token ? {\n    Authorization: 'Bearer ' + user.token\n  } : null;\n};\n\n// Utility function to handle errors\nconst handleError = error => {\n  if (error.response && error.response.data && error.response.data.error) {\n    return {\n      success: false,\n      data: error.response.data.error\n    };\n  }\n  return {\n    success: false,\n    data: error.message\n  };\n};\nconst checkAuthHeader = () => {\n  const headers = authHeader();\n  if (!headers) {\n    throw new Error(\"Authorization token is missing. Please log in.\");\n  }\n  return headers;\n};\nexport const registerjs = async (userName, email, password) => {\n  try {\n    const response = await axios.post(`http://localhost:8082/auth/register`, {\n      userName: userName,\n      userEmail: email,\n      password: password\n    });\n    return {\n      success: true,\n      data: \"User successfully registered!!!\"\n    };\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const loginjs = async (userName, password) => {\n  try {\n    const response = await axios.post(`http://localhost:8082/auth/login`, {\n      userName: userName,\n      password: password\n    });\n    sessionStorage.setItem(\"user\", JSON.stringify(response.data));\n    return {\n      success: true,\n      data: \"Successfully logged in car shop\"\n    };\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const getProduct = async () => {\n  try {\n    const response = await axios.get(`http://localhost:8082/shop/product`, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const getCategory = async () => {\n  try {\n    const response = await axios.get(`http://localhost:8091/shop/category`, {\n      headers: checkAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const getOneProd = async id => {\n  try {\n    const response = await axios.get(`http://localhost:8082/shop/product/${id}`, {\n      headers: checkAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const updateProduct = async (id, product) => {\n  try {\n    const response = await axios.put(`http://localhost:8082/shop/product/update/${id}`, product, {\n      headers: checkAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const saveProduct = async formData => {\n  try {\n    const response = await axios.post(`http://localhost:8091/shop/addproduct`, formData, {\n      headers: {\n        ...checkAuthHeader(),\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const deleteProduct = async id => {\n  try {\n    const response = await axios.delete(`http://localhost:8091/shop/product/${id}`, {\n      headers: checkAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const saveCategory = async category => {\n  try {\n    const response = await axios.post(\"http://localhost:8082/shop/addcategory\", category, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const addCategory = async category => {\n  try {\n    const response = await axios.post(`http://localhost:8091/shop/addcategory`, category, {\n      headers: checkAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const updateCategory = async (id, category) => {\n  try {\n    const response = await axios.put(`http://localhost:8091/shop/category/update/${id}`, category, {\n      headers: checkAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\nexport const deleteCategory = async id => {\n  try {\n    const response = await axios.delete(`http://localhost:8091/shop/category/${id}`, {\n      headers: checkAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};","map":{"version":3,"names":["axios","authHeader","user","JSON","parse","sessionStorage","getItem","token","Authorization","handleError","error","response","data","success","message","checkAuthHeader","headers","Error","registerjs","userName","email","password","post","userEmail","loginjs","setItem","stringify","getProduct","get","getCategory","getOneProd","id","updateProduct","product","put","saveProduct","formData","deleteProduct","delete","saveCategory","category","e","console","log","addCategory","updateCategory","deleteCategory"],"sources":["C:/Users/aser/Downloads/Car/carsales/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst authHeader = () => {\r\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n    return user && user.token ? { Authorization: 'Bearer ' + user.token } : null;\r\n};\r\n\r\n// Utility function to handle errors\r\nconst handleError = (error) => {\r\n    if (error.response && error.response.data && error.response.data.error) {\r\n        return { success: false, data: error.response.data.error };\r\n    }\r\n    return { success: false, data: error.message };\r\n};\r\n\r\nconst checkAuthHeader = () => {\r\n    const headers = authHeader();\r\n    if (!headers) {\r\n        throw new Error(\"Authorization token is missing. Please log in.\");\r\n    }\r\n    return headers;\r\n};\r\n\r\nexport const registerjs = async (userName, email, password) => {\r\n    try {\r\n        const response = await axios.post(`http://localhost:8082/auth/register`, {\r\n            userName: userName,\r\n            userEmail: email,\r\n            password: password\r\n        });\r\n        return { success: true, data: \"User successfully registered!!!\" };\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const loginjs = async (userName, password) => {\r\n    try {\r\n        const response = await axios.post(`http://localhost:8082/auth/login`, {\r\n            userName: userName,\r\n            password: password\r\n        });\r\n        sessionStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        return { success: true, data: \"Successfully logged in car shop\" };\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const getProduct = async () => {\r\n    try {\r\n        const response = await axios.get(`http://localhost:8082/shop/product`, { headers: authHeader() });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const getCategory = async () => {\r\n    try {\r\n        const response = await axios.get(`http://localhost:8091/shop/category`, { headers: checkAuthHeader() });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const getOneProd = async (id) => {\r\n    try {\r\n        const response = await axios.get(`http://localhost:8082/shop/product/${id}`, { headers: checkAuthHeader() });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const updateProduct = async (id, product) => {\r\n    try {\r\n        const response = await axios.put(`http://localhost:8082/shop/product/update/${id}`, product, { headers: checkAuthHeader() });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const saveProduct = async (formData) => {\r\n    try {\r\n        const response = await axios.post(`http://localhost:8091/shop/addproduct`, formData, {\r\n            headers: {\r\n                ...checkAuthHeader(),\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n    try {\r\n        const response = await axios.delete(`http://localhost:8091/shop/product/${id}`, { headers: checkAuthHeader() });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const saveCategory = async(category)=>{\r\n    try{\r\n     const response = await axios.post(\"http://localhost:8082/shop/addcategory\",category,{\r\n        headers: authHeader()\r\n           }\r\n     );\r\n     return response.data;\r\n    }\r\n    catch(e){\r\n         console.log(e);\r\n    }\r\n}\r\n\r\nexport const addCategory = async (category) => {\r\n    try {\r\n        const response = await axios.post(`http://localhost:8091/shop/addcategory`, category, { headers: checkAuthHeader() });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const updateCategory = async (id, category) => {\r\n    try {\r\n        const response = await axios.put(`http://localhost:8091/shop/category/update/${id}`, category, { headers: checkAuthHeader() });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n\r\nexport const deleteCategory = async (id) => {\r\n    try {\r\n        const response = await axios.delete(`http://localhost:8091/shop/category/${id}`, { headers: checkAuthHeader() });\r\n        return response.data;\r\n    } catch (error) {\r\n        return handleError(error);\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}