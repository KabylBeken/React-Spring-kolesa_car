{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Downloads\\\\Car\\\\carsales\\\\src\\\\Category.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getCategory, addCategory, updateCategory, deleteCategory } from \"./api\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [editCategory, setEditCategory] = useState({\n    id: null,\n    name: \"\"\n  });\n  useEffect(() => {\n    loadCategories();\n  }, []);\n  const loadCategories = async () => {\n    const response = await getCategory();\n    if (response.success !== false) {\n      setCategories(response);\n    } else {\n      toast.error(response.data);\n    }\n  };\n  const handleAddCategory = async () => {\n    if (newCategory.trim() === \"\") {\n      toast.error(\"Category name cannot be empty\");\n      return;\n    }\n    const response = await addCategory({\n      name: newCategory\n    });\n    if (response.success !== false) {\n      toast.success(\"Category added successfully\");\n      loadCategories();\n      setNewCategory(\"\");\n    } else {\n      toast.error(response.data);\n    }\n  };\n  const handleEditCategory = category => {\n    setEditCategory(category);\n  };\n  const handleUpdateCategory = async () => {\n    if (editCategory.name.trim() === \"\") {\n      toast.error(\"Category name cannot be empty\");\n      return;\n    }\n    const response = await updateCategory(editCategory.id, {\n      name: editCategory.name\n    });\n    if (response.success !== false) {\n      toast.success(\"Category updated successfully\");\n      loadCategories();\n      setEditCategory({\n        id: null,\n        name: \"\"\n      });\n    } else {\n      toast.error(response.data);\n    }\n  };\n  const handleDeleteCategory = async id => {\n    const response = await deleteCategory(id);\n    if (response.success !== false) {\n      toast.success(\"Category deleted successfully\");\n      loadCategories();\n    } else {\n      toast.error(response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"New category\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2\",\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [editCategory.id === category.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: editCategory.name,\n          onChange: e => setEditCategory({\n            ...editCategory,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [editCategory.id === category.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-sm me-2\",\n            onClick: handleUpdateCategory,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info btn-sm me-2\",\n            onClick: () => handleEditCategory(category),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: () => handleDeleteCategory(category.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Category, \"5lSSFq+P7Gwkk7qGSX15XQrm1HU=\");\n_c = Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["useEffect","useState","getCategory","addCategory","updateCategory","deleteCategory","ToastContainer","toast","jsxDEV","_jsxDEV","Category","_s","categories","setCategories","newCategory","setNewCategory","editCategory","setEditCategory","id","name","loadCategories","response","success","error","data","handleAddCategory","trim","handleEditCategory","category","handleUpdateCategory","handleDeleteCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/aser/Downloads/Car/carsales/src/Category.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getCategory, addCategory, updateCategory, deleteCategory } from \"./api\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Category() {\r\n    const [categories, setCategories] = useState([]);\r\n    const [newCategory, setNewCategory] = useState(\"\");\r\n    const [editCategory, setEditCategory] = useState({ id: null, name: \"\" });\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const loadCategories = async () => {\r\n        const response = await getCategory();\r\n        if (response.success !== false) {\r\n            setCategories(response);\r\n        } else {\r\n            toast.error(response.data);\r\n        }\r\n    };\r\n\r\n    const handleAddCategory = async () => {\r\n        if (newCategory.trim() === \"\") {\r\n            toast.error(\"Category name cannot be empty\");\r\n            return;\r\n        }\r\n        const response = await addCategory({ name: newCategory });\r\n        if (response.success !== false) {\r\n            toast.success(\"Category added successfully\");\r\n            loadCategories();\r\n            setNewCategory(\"\");\r\n        } else {\r\n            toast.error(response.data);\r\n        }\r\n    };\r\n\r\n    const handleEditCategory = (category) => {\r\n        setEditCategory(category);\r\n    };\r\n\r\n    const handleUpdateCategory = async () => {\r\n        if (editCategory.name.trim() === \"\") {\r\n            toast.error(\"Category name cannot be empty\");\r\n            return;\r\n        }\r\n        const response = await updateCategory(editCategory.id, { name: editCategory.name });\r\n        if (response.success !== false) {\r\n            toast.success(\"Category updated successfully\");\r\n            loadCategories();\r\n            setEditCategory({ id: null, name: \"\" });\r\n        } else {\r\n            toast.error(response.data);\r\n        }\r\n    };\r\n\r\n    const handleDeleteCategory = async (id) => {\r\n        const response = await deleteCategory(id);\r\n        if (response.success !== false) {\r\n            toast.success(\"Category deleted successfully\");\r\n            loadCategories();\r\n        } else {\r\n            toast.error(response.data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <ToastContainer />\r\n            <h2>Categories</h2>\r\n            <div className=\"mb-4\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"New category\" \r\n                    value={newCategory} \r\n                    onChange={(e) => setNewCategory(e.target.value)} \r\n                />\r\n                <button className=\"btn btn-primary mt-2\" onClick={handleAddCategory}>Add Category</button>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n                {categories.map((category) => (\r\n                    <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        {editCategory.id === category.id ? (\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                value={editCategory.name} \r\n                                onChange={(e) => setEditCategory({ ...editCategory, name: e.target.value })} \r\n                            />\r\n                        ) : (\r\n                            <span>{category.name}</span>\r\n                        )}\r\n                        <div>\r\n                            {editCategory.id === category.id ? (\r\n                                <button className=\"btn btn-success btn-sm me-2\" onClick={handleUpdateCategory}>Update</button>\r\n                            ) : (\r\n                                <button className=\"btn btn-info btn-sm me-2\" onClick={() => handleEditCategory(category)}>Edit</button>\r\n                            )}\r\n                            <button className=\"btn btn-danger btn-sm\" onClick={() => handleDeleteCategory(category.id)}>Delete</button>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}